{"name":"Cloudwatch Agent","tagline":"Cloudwatch Agent - UDP/IP long running process for AWS CloudWatch","body":"CloudWatch Agent is a long running process that collects your application information and sent them to CloudWatch every minute. The goal of this monitor is to reduce the time overhead introduced by CloudWatch SDK and also all write operation to the service.\r\n\r\nThanks to the agent you can collect a wide range of metrics like: exceptions, timing about your application using a single monitor tool in your AWS space: CloudWatch.\r\n\r\n## Getting Started\r\n\r\nThe agent works using UDP/IP packages on `127.0.0.1`, we just have to send simple JSON package to the monitor on port `1234`\r\n\r\n```\r\n{\"namespace\": \"wdm\", \"metric\": \"indexer-timing\", \"value\": 81.21}\r\n```\r\n\r\nBefore use the service remember to configure the AWS ApiKey and SecretKey in the daemon configuration file at `/etc/default/cloudwatch-agent` you can also tweak monitor option tuning the configuration file at: `/etc/cloudwatch-agent/cloudwatch-agent.conf`\r\n\r\nYou can try the daemon using `nc` tool:\r\n\r\n```\r\necho '{\"namespace\": \"wdm\", \"metric\": \"indexer-timing\", \"value\": 81.21}' | nc -u localhost 1234\r\n```\r\n\r\n## Advanced usage\r\n\r\nThe complete data packet structure is quite bit more complex:\r\n\r\n```\r\n{\r\n    \"namespace\": ...\r\n    \"metric\": ...\r\n    \"unit\": ...\r\n    \"value\": ...\r\n    \"op\": ...\r\n}\r\n```\r\nWhere you can tune also the operation type and the metric unit. Valid operations are:\r\n\r\n * `avg` - Compute the average of all packages\r\n * `sum` - Sum all incoming samples\r\n * `max` - Send only the max point\r\n * `min` - Send only the min point\r\n\r\nValid units are:\r\n  * `Seconds`\r\n  * `Microseconds`\r\n  * `Milliseconds`\r\n  * `Bytes`\r\n  * `Kilobytes`\r\n  * `Megabytes`\r\n  * `Gigabytes`\r\n  * `Terabytes`\r\n  * `Bits`\r\n  * `Kilobits`\r\n  * `Megabits`\r\n  * `Gigabits`\r\n  * `Terabits`\r\n  * `Percent`\r\n  * `Count`\r\n  * `Bytes/Second`\r\n  * `Kilobytes/Second`\r\n  * `Megabytes/Second`\r\n  * `Gigabytes/Second`\r\n  * `Terabytes/Second`\r\n  * `Bits/Second`\r\n  * `Kilobits/Second`\r\n  * `Megabits/Second`\r\n  * `Gigabits/Second`\r\n  * `Terabits/Second`\r\n  * `Count/Second`\r\n\r\n## Install the agent\r\n\r\n### Debian Family\r\n\r\nIf you use a Debian like distribution you can use the precompiled package\r\n\r\n```\r\necho \"deb http://dl.bintray.com/wdalmut/deb /\" | sudo tee /etc/apt/sources.list.d/wdalmut.list\r\necho \"#deb-src http://dl.bintray.com/wdalmut/deb /\" | sudo tee -a /etc/apt/sources.list.d/wdalmut.list\r\n```\r\n\r\nNow just update your repository\r\n\r\n```\r\nsudo apt-get update\r\n```\r\n\r\nAnd install the monitor\r\n\r\n```\r\nsudo apt-get install cloudwatch-agent\r\n```\r\n\r\n### RHEL family\r\n\r\nIf you use a RedHat based distribution add the RPM repository\r\n\r\n```\r\nwget https://bintray.com/wdalmut/rpm/rpm -O bintray-wdalmut-rpm.repo\r\nsudo mv bintray-wdalmut-rpm.repo /etc/yum.repos.d/\r\n```\r\n\r\nnow just install it\r\n\r\n```\r\nsudo yum install cloudwatch-agent.x86_64\r\n```\r\n\r\n## Start the agent\r\n\r\nAfter the installation process and the configuration you can start the agent using the common service interface.\r\n\r\n```\r\nsudo service cw-agent start\r\n```\r\n\r\nAllowed operations are:\r\n\r\n * start\r\n * stop\r\n * status\r\n * restart\r\n\r\n## Examples of usage\r\n\r\nJust as example you can count the number of exception in your application just sending a simple packet for each exception catched\r\n\r\n{\r\n    \"namespace\": \"app\"\r\n    \"metric\": \"errors\"\r\n    \"value\": 1\r\n    \"op\": \"sum\"\r\n}\r\n\r\nFor each exception we can collect the total number in a minute and send the total amount to CloudWatch every minute.","google":"UA-54115109-1","note":"Don't delete this file! It's used internally to help with page regeneration."}